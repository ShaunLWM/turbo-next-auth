services:
  db:
    image: postgres:17.2-alpine3.21
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - 5432:5432
    env_file:
      - ./apps/api/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  cache:
    image: redis:7.4.2-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    ports:
      - "8000:8000"
    env_file:
      - ./apps/app/.env.production
    depends_on:
      api:
        condition: service_started

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    ports:
      - "5002:5002"
    env_file:
      - ./apps/api/.env.production
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy

networks:
  default:
    driver: bridge
