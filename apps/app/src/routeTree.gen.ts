/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedIndexRouteImport } from './routes/(protected)/index'
import { Route as publicLoginIndexRouteImport } from './routes/(public)/login/index'

const protectedIndexRoute = protectedIndexRouteImport.update({
  id: '/(protected)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicLoginIndexRoute = publicLoginIndexRouteImport.update({
  id: '/(public)/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedIndexRoute
  '/login': typeof publicLoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedIndexRoute
  '/login': typeof publicLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(protected)/': typeof protectedIndexRoute
  '/(public)/login/': typeof publicLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login'
  id: '__root__' | '/(protected)/' | '/(public)/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  protectedIndexRoute: typeof protectedIndexRoute
  publicLoginIndexRoute: typeof publicLoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)/': {
      id: '/(protected)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/login/': {
      id: '/(public)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof publicLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  protectedIndexRoute: protectedIndexRoute,
  publicLoginIndexRoute: publicLoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
